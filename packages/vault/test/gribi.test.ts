import { expect, test } from 'vitest'

const openBoxCall = "0x8b1dbfe70000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a

// test('Encodes the call correctly', async () => {
//     const evmRootSystem = new EVMRootSystem();
//     const signal: Signal<any, StateUpdate> = {
//         output: {
//             id: BigInt("333"),
//             method: "openBox",
//             inputs: 
//             [{
//                 slot: 0, value: 1
//             }],
//             operations: 
//             [{
//                 opid: 1, value: 3, nullifier: 1
//             }]
//         }
//     };
//     const txs = await evmRootSystem.createTxs([signal]);
//     expect(txs[0].data).toBe(openBoxCall);
// });
